# -*- coding: utf-8 -*-
"""Credit Default.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P4NWwYdXc6b5womzNDnG6KG8hywJhfNx
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import classification_report, confusion_matrix, roc_auc_score

from imblearn.over_sampling import SMOTE
from xgboost import XGBClassifier

import shap

# Upload file
df = pd.read_csv('default_of_credit_card_clients - Data.csv', header=1)
df.rename(columns={'default payment next month': 'default'}, inplace=True)

# Drop ID column if present
if 'ID' in df.columns:
    df.drop(columns='ID', inplace=True)

# Separate features and target
X = df.drop('default', axis=1)
y = df['default']

# Scale features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42, stratify=y)

# Balance classes using SMOTE
smote = SMOTE(random_state=42)
X_train_res, y_train_res = smote.fit_resample(X_train, y_train)

xgb = XGBClassifier(use_label_encoder=False, eval_metric='logloss', random_state=42)
xgb.fit(X_train_res, y_train_res)

# Predictions
y_pred = xgb.predict(X_test)
y_prob = xgb.predict_proba(X_test)[:, 1]

# Evaluation
print(classification_report(y_test, y_pred))
print("ROC AUC Score:", roc_auc_score(y_test, y_prob))

# Confusion Matrix
sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='d', cmap='Blues')
plt.title("Confusion Matrix")
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.show()

explainer = shap.Explainer(xgb, X_train_res)
shap_values = explainer(X_test[:100])  # Subset for speed

# SHAP Summary Plot
shap.summary_plot(shap_values, X_test[:100], feature_names=df.columns[:-1])

